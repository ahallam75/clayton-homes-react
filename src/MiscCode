// From App.js

<div className="App">
          <nav className="grey darken-2">
            <div className="nav-wrapper">
              <ul className="left hide-on-med-and-down">
                <li className="brand-logo center">Clayton Homes</li>
                <li><Link to='/'>Main Page</Link></li>
                <li><Link to='/Homes'>Inventory</Link></li>
                <li><Link to='/Available'>Availability</Link></li>
              </ul>
            </div>
          </nav>
        <main>
          <Route exact path="/" component={Landing} />
          <Route path="/Homes" component={Homes} />
          <Route path="/Available" component={Available} />
        </main>
      </div>

---------------------

      <div className="row">
          <nav className="grey darken-2">
            <div className="nav-wrapper">   
              <ul className="hide-on-med-and-down right"> 
              <li><a href="/" className="brand-logo center white-text">Clayton Homes</a></li>             
                <li><Link to='/'>Main Page</Link></li>
                <li><Link to='/Homes'>Inventory</Link></li>
                <li><Link to='/Available'>Availabile</Link></li> 
                <li>    
                 <div className="center row">
                    <div className="col s12 " >
                      <div className="row" id="topbarsearch">
                        <form>
                          <div className="input-field col s6 s12 white-text">
                            <input type="text" placeholder="search" id="autocomplete-input" className="autocomplete white-text"/>
                          </div>
                        </form>
                        </div>
                      </div>
                    </div>          
                </li>                                
              </ul>
            </div>
          </nav>
        <main>
          <Route exact path="/" component={Landing} />
          <Route path="/Homes" component={Homes} />
          <Route path="/Available" component={Available} />
        </main>
      </div>


//Landing.js
import React from 'react';

const Landing = () => (
  <div className="container center">
    <h1>Welcome to Clayton Homes!</h1>
    <p>Please click on Inventory or Availability above to see all the wonderful homes we have for you!</p>
  </div>
);

export default Landing;


//SearchHome.js
 import React from 'react';
import Homes from './Homes';

class SearchHomes extends Component {
  constructor(props) {
    super(props);
    this.state = {
      search: ''
    };
  }

  updateSearch(event) {
    this.setState({search: event.target.value})
  }

  render() {
    
    let filteredHomes = this.props.homes.toLowerCase().filter((item) => {
      return item.HomeId.indexOf(this.state.search.toLowerCase()) !== -1;
    });

    return (
      <div>
        <input type="text" 
          value={this.state.search}
          onChange={this.updateSearch.bind(this)}
        />
        <ul>
          {filteredHomes.map((item) => {
            return <Homes homes={item} key={homes.Id} />
          })}
        </ul>
      </div>
    )
  }
}


export default SearchHomes;

----------------------------

//Home.js

import React, { Component } from 'react';
import axios from 'axios';
import HomeSingle from './HomeSingle'

class Homes extends Component {
    constructor(props) {
      super(props);
      this.state = {
        homes: [],
      };
    }

    componentDidMount() {
      const url = process.env.REACT_APP_CLAYTON_HOMES_API_KEY 

      // fetch(url)
      // .then((response) => {
      //   return response.json();
      // })
      // .then((data) => {
      //   this.setState({
      //     homes: data.Homes
      //   })
      // })
      // .catch((error) => {
      //   this.setState({
      //     error: true
      //   })
      // });

      axios.get(url)
        .then((response) => {
          this.setState({
            search: '',
            homes: response.data.Homes
          })
        })
        .catch((error) => console.log(error));
    }

  renderItems() {
    return this.state.homes.map((item) => (
      <HomeSingle key={item.Id} item={item} />
    ));
  }

  updateSearch(event) {
    this.setState({search: event.target.value})
  }

  handleClick(event) {
    console.log("do something on clicking button")
  }

  render() {

    let filteredHomes = this.state.homes.toLowerCase().filter((item) => {
      return item.HomeId.indexOf(this.state.search.toLowerCase()) !== -1;
    });

    return (
      <div>
        <form>
          <input type="text"
            placeholder="search" 
            value={this.state.search}
            onChange={this.updateSearch.bind(this)}
          />
          <button type="submit" onClick={(e) => this.handleClick(e)}>
            Search
          </button>
        </form>
        <ul>
          {filteredHomes.map((item) => {
            return this.response.homes={item} key={homes.Id}
          })}
        </ul>
      </div>
    );
  }
}

export default Homes;

//Older version

// return (
//   <div className="row">
//     {this.renderItems()}
//   </div>
// );

----------------------------
//Search bar 
    <div>
      <form className="searchBar">
        <div className="input-field">
          <input id="search" type="search" required/>
          <label className="label-icon" htmlFor="search"><i className="material-icons">search</i></label>
          <i className="material-icons">close</i>
        </div>
      </form>
    </div>